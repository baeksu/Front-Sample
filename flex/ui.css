/********************* menu *********************/
.menu{
  display: flex;
}

.menu-item{
  width: 25%; /* flex-grow 보다는 이게 직관적인듯(개인적으로) */
  background-color: gold;
  transition: 0.5s;
}

.menu-item:hover{
  width: 35%;
  background-color: crimson;
}

.menu-link{
  /* 
    a 태그는 기본이 inline 이라 해당 content 를 클릭해야지 이벤트가 발생
    block 으로 해줌으로써 더 넓은 공간을 차지하게 해서 클릭을 쉽게 만들어준다.
    block : 한줄을 모두 차지 나머지 요소는 아래로 밀어내기 됨
  */
  display: block; 
  padding: 1em;
  font-size: 1.2rem;
  font-weight: bold;
  color: #555;
  text-decoration: none;/* a태그의 밑줄이 없어지네? */
  text-align: center; 
}

.menu-link:hover {
  color:white;
}


/********************** search ***********************/
.search-form{
  display: flex;
  height: 40px;
}

.search-form input[type='search']{
  flex: 1;
  border: 0; /* 테두리 없애고 */
  margin-right: 10px; /* submit 버튼과 사이를 조금 벌려주고 */
  border-radius: 0.3em;
  font-size: 1rem;
}

.search-form input[type='submit']{
  width: 4em;
  border: 0;
  border-radius: 0.3em;
  font-size: 1rem;
  background-color: gold;
}

/********************** bullet-list ***********************/
.info-list-item{
  display: flex; /*item 에 "before" 와 텍스트 가 있는데, flex를 하게 되면 알아서 list 형태처럼 들여쓰기가 됨*/
  margin: 0.5em 0;
  
}
.info-list-item:before{
  content: ""; /* 가상엘리먼트 before 를사용해서 bullet 기호설정 */
  margin-right: 0.5em;
}


/* message-list */
.user-item{
  display: flex; 
  /* flex 만 적용하면 이미지가 찌그러지는걸 볼 수 있다. 
  default로 shrink 가 1로 설정되어 있어서 그렇다*/  
  margin-bottom: 2em;
}
.user-photo {
  flex-shrink: 0; /*shrink 를 찌그러지지 않게할 el에다가 줘야하는구나 여기다가 줘야 하는구나*/
  width: 50px;
  height: 50px;
  margin-right: 0.5em;
  border: 2px solid #555;
  border-radius: 50%;
  background-color: gold;
  background-repeat: no-repeat;
  /* background-position: center; */ /* 지금 이미지는 center안하는게 나은듯*/
  background-size: cover; 
}

/* modal */
.modal{
  display: flex;
  justify-content: center;
  align-items: center;
  background: rgba(0,0,0,0.3);
  position:fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.dialog{
  width: 50vw;
  padding: 2em;
  border-radius: 1em;
  background: white;
}

/*card-list*/

.card-item{
  margin-bottom: 2rem;
  display: flex;
  flex-direction: column; 
  /*카드 아이템에 이미지랑 설명 요소가 들어간다.
    설명 길이에 따라서 전체 카드아이템을 늘려주려고 한다. 
    설명요소에 flex-grow 를 1을 주면된다. 그러면 카드아이템 영역을 꽉 채워준다.
    근데 텍스트를 무한으로 늘리면 알아서 y축 방향으로 카드아이템의 크기가 늘어나네*/
}


.card-image{/*img 처리는 백그라운드 이미지로 처리하는게 좋다는데... 뭔차인지는 잘 모르겠.../*/
  background: lightgray;
  height: 0px; /* 백그라운드 이미지로 지정하면 이렇게 영역을 설정해줘야지 백그라운드 범위가 설정되고 이미지가 보인다. */
  padding-bottom: 60%; /* 이렇게만 해도 반응형이 적용되네... 비율이라서 그런가 */
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

.card-image img{
  display: none;
}

.card-desc{
  padding: 1em;
  background-color: ivory;
  flex-grow: 1;
}


@media (min-width: 600px) { /* 600px 이상일 때*/
  .card-list-container{
    overflow: hidden; 
    /*패딩때문에 생기는 스크롤을 제거해주기 위해서
    컨테이너로 한번 감싸고 overflow 를 hidden으로*/ 
  }
  .card-list{
    display: flex;
    flex-wrap: wrap; /* 범위 벗어나면 알아서 떨어지게 */
    /* justify-content: space-between; */

    /* 여기서 -1rem 하는 이유가 
    .card-item 에서 padding 값을 줬는데 이렇게 하면
    화면양쪽에 여백이 생기는데 이걸 상쇄 시킬려고  */
    margin: 0 -1rem;
  }
  
  .card-item{
    width:50%;
    padding: 0 1rem;
  }
}

@media (min-width: 1200px){ /* 요렇게 한번만더 반응형을 적용시켜보자 */
  .card-item{
    width: 33.3333%;
  }
}